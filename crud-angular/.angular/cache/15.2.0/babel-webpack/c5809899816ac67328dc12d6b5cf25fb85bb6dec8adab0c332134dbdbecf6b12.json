{"ast":null,"code":"import { BehaviorSubject, delay, finalize, take, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CursosService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    //private readonly API = '/assets/cursos.json';\n    this.loadingSubject = new BehaviorSubject(false);\n  }\n  list() {\n    this.loadingSubject.next(true);\n    return this.httpClient.get('/assets/cursos.json').pipe(\n    //first(),\n    take(1), delay(5000), finalize(() => this.loadingSubject.next(false)), tap(listaCursos => console.log(listaCursos)));\n  }\n}\nCursosService.ɵfac = function CursosService_Factory(t) {\n  return new (t || CursosService)(i0.ɵɵinject(i1.HttpClient));\n};\nCursosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CursosService,\n  factory: CursosService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAAQA,eAAe,EAAEC,KAAK,EAAEC,QAAQ,EAAqBC,IAAI,EAAEC,GAAG,QAAO,MAAM;;;AAKnF,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAH9B;IAEA,mBAAc,GAAG,IAAIP,eAAe,CAAU,KAAK,CAAC;EACN;EAE9CQ,IAAI;IACF,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IAE9B,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAU,qBAAqB,CAAC,CAACC,IAAI;IAC7D;IACAT,IAAI,CAAC,CAAC,CAAC,EACPF,KAAK,CAAC,IAAI,CAAC,EACXC,QAAQ,CAAC,MAAM,IAAI,CAACO,cAAc,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/CN,GAAG,CAACS,WAAW,IAAIC,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC,CAAC,CAC7C;EACH;;AAjBWR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAW,SAAbX,aAAa;EAAAY,YAFZ;AAAM","names":["BehaviorSubject","delay","finalize","take","tap","CursosService","constructor","httpClient","list","loadingSubject","next","get","pipe","listaCursos","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\MARCOS_VM\\Documents\\_desenv\\Git\\crud-angular-spring\\crud-angular\\src\\app\\cursos\\services\\cursos.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Curso} from \"../model/curso\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {BehaviorSubject, delay, finalize, first, Observable, take, tap} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CursosService {\n\n  //private readonly API = '/assets/cursos.json';\n\n  loadingSubject = new BehaviorSubject<boolean>(false);\n  constructor(private httpClient: HttpClient) { }\n\n  list() {\n    this.loadingSubject.next(true);\n\n    return this.httpClient.get<Curso[]>('/assets/cursos.json').pipe(\n      //first(),\n      take(1),\n      delay(5000),\n      finalize(() => this.loadingSubject.next(false)),\n      tap(listaCursos => console.log(listaCursos))\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}